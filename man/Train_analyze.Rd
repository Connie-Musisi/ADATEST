% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TrainAlz_function.R
\name{Train_analyze}
\alias{Train_analyze}
\title{Train prediction model}
\usage{
Train_analyze(data, seed)
}
\arguments{
\item{data}{A \code{phyloseq} object containing microbiome training data with taxonomic information and group labels.}

\item{seed}{An optional seed-setting expression for reproducibility (default: \code{set.seed(19)}).}
}
\value{
A list containing:
\describe{
\item{y}{A numeric vector of outcome labels: \code{-1} for \code{I_0} taxa, \code{1} for \code{I_1} taxa.}
\item{Train_scaled}{A matrix of normalized and sorted training features.}
\item{Train_results}{A data frame containing model predictions and the true outcome labels.}
\item{Train_parest}{A numeric vector of trained regression coefficients (scores).}
}
}
\description{
This function trains a linear regression model on microbiome training data to predict differential abundance.
It applies normalization to paired OTU counts, performs a sample-level permutation for the null group (\code{I_0}),
and fits a regression model using sorted input features.
The resulting scores (\code{Train_parest}) are used downstream for test statistic computation.
}
\details{
This function is intended for internal use within the ADATEST pipeline. It constructs a feature matrix
from paired taxa OTU counts using a normalization and sorting strategy. A simple linear model is fit
to predict binary group membership, and the learned coefficients are interpreted as discriminative scores.
}
\examples{
\dontrun{
# Assuming you already constructed a pseudo-training object with group labels:
result <- Train_analyze(training_phyloseq_object)
print(result$Train_parest)
}
}
\keyword{internal}
