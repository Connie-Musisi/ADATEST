% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TrainAlz_function.R
\name{Train_analyze}
\alias{Train_analyze}
\title{Train prediction model}
\usage{
Train_analyze(data, seed = set.seed(19))
}
\arguments{
\item{data}{A \code{phyloseq} object containing microbiome data with taxonomic and sample information.}

\item{seed}{An optional seed for reproducibility. Default is \code{set.seed(19)}.}
}
\value{
A list containing:
\describe{
\item{y}{A numeric vector of outcome variables (\code{-1} for \code{I_0}, \code{1} for \code{I_1}).}
\item{regression_data1}{A matrix of normalized OTU counts used for training.}
\item{Train_results}{A data frame containing model predictions and actual outcomes.}
\item{Train_parest}{A numeric vector of trained regression parameters.}
}
}
\description{
This function trains a linear regression model on microbiome data to predict differential abundance in the training dataset.
It applies a permutation approach for taxa labels and normalizes OTU counts before model fitting.
The key output is \code{Train_parest}, a vector of trained regression parameters/partial least square estimates
used for prediction and we call these the scores.
}
\examples{
\dontrun{
library(phyloseq)
data("GlobalPatterns") # Example dataset
result <- Train_analyze(GlobalPatterns)
print(result$Train_results)
}
}
